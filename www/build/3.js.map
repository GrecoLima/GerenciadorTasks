{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACZ;AAapC,IAAa,eAAe;IAA5B;IAA8B,CAAC;IAAD,sBAAC;AAAD,CAAC;AAAlB,eAAe;IAX3B,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,yDAAS;SACV;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;SACpC;QACD,OAAO,EAAE;YACP,yDAAS;SACV;KACF,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACfc;AACwG;AAChG;AACV;AAGxC;;;;;GAKG;AAMF,IAAa,SAAS;IAQpB,mBACS,OAAsB,EACtB,SAAoB,EACpB,SAA0B,EAC1B,OAA0B,EAC1B,KAAsB,EACtB,SAA0B,EAC1B,OAAgB,EAChB,MAAc;QAPd,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACpB,cAAS,GAAT,SAAS,CAAiB;QAC1B,YAAO,GAAP,OAAO,CAAmB;QAC1B,UAAK,GAAL,KAAK,CAAiB;QACtB,cAAS,GAAT,SAAS,CAAiB;QAC1B,YAAO,GAAP,OAAO,CAAS;QAChB,WAAM,GAAN,MAAM,CAAQ;QACrB,IAAI,CAAC,IAAI,GAAG,EAAC,KAAK,EAAC,EAAE,EAAE,QAAQ,EAAC,EAAE,EAAC,CAAC;IACtC,CAAC;IAED,kCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;IACtC,CAAC;IAGD,+BAAW,GAAX;QACE,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACrD,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAED,0BAAM,GAAN;IAEA,CAAC;IAEF,4BAAQ,GAAR;QAAA,iBAuBE;QAtBA,EAAE,EAAC,IAAI,CAAC,IAAI,CAAC,KAAK,KAAG,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAG,EAAE,CAAC,EAAC;YAChD,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChB,OAAO,EAAE,qCAAqC;gBAC9C,QAAQ,EAAE,IAAI;gBACd,QAAQ,EAAE,KAAK;aAChB,CAAC,CAAC;YAEH,KAAK,CAAC,OAAO,EAAE,CAAC;QACpC,CAAC;QAAA,IAAI,EAAC;YACJ,IAAI,QAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;gBAC/B,OAAO,EAAE,eAAe;aACzB,CAAC,CAAC;YAEH,QAAM,CAAC,OAAO,EAAE,CAAC;YACjB,UAAU,CAAC;gBACX,QAAM,CAAC,OAAO,EAAE,CAAC;gBACjB,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,4DAAQ,CAAC,CAAC;gBAC/B,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;YAC1D,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,CAAC;IAGF,CAAC;IAGH,gBAAC;AAAD,CAAC;AA5DY,SAAS;IALrB,wEAAS,EAAE;IACX,wEAAS,CAAC;QACT,QAAQ,EAAE,YAAY;OACG;KAC1B,CAAC;yEAU+B;QACX,sEAAS;QACT,wEAAe;QACjB,uEAAiB;QACnB,sEAAe;QACX,oEAAe;QACjB,8DAAO;QACR,MAAM;AA4CxB;SA5DY,SAAS,e","file":"3.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n  ],\n  exports: [\n    LoginPage\n  ]\n})\nexport class LoginPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, AlertController, ModalController, LoadingController, Events, ToastController } from 'ionic-angular';\nimport { Service } from '../../providers/service';\nimport { HomePage } from '../home/home';\n\n\n/**\n * Generated class for the LoginPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n @IonicPage()\n @Component({\n   selector: 'page-login',\n   templateUrl: 'login.html',\n })\n export class LoginPage {\n\n   username: String;\n   password: String;\n   result: {};\n   test: any;\n   user: any;\n\n   constructor(\n     public navCtrl: NavController, \n     public navParams: NavParams,\n     public toastCtrl: ToastController,  \n     public loading: LoadingController, \n     public alert: AlertController, \n     public modalCtrl: ModalController,\n     public service: Service,\n     public events: Events) {\n     this.user = {email:\"\", password:\"\"};\n   }\n\n   ionViewDidLoad() {\n     console.log('ionViewDidLoad Login');\n   }\n\n\n   inscription(){\n     let modal = this.modalCtrl.create('InscriptionPage');\n     modal.present();\n   }\n\n   forgot(){\n\n   }\n\n  onSubmit(){\n    if(this.user.email===\"\" || this.user.password===\"\"){\n        let toast = this.toastCtrl.create({\n                          message: \"Por favor preencha todos os campos!\",\n                          duration: 3000,\n                          position: 'top'\n                        });\n\n                        toast.present();\n    }else{\n      let loader = this.loading.create({\n        content: \"Carregando...\" ,\n      });\n\n      loader.present();\n      setTimeout(() => {\n      loader.dismiss();\n      this.navCtrl.setRoot(HomePage);\n      this.service.toastmessage(\"VocÃª esta conectado\", \"top\");\n    }, 1500);\n    }\n \n    \n   }\n\n\n }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}